@tailwind base;
@tailwind components;
@tailwind utilities;
/* DaisyUI is configured as a Tailwind plugin in tailwind.config.ts,
   so this @plugin line is not needed and should be removed. */

:root {
  --background: theme('colors.base-100');
  --foreground: theme('colors.base-content');
  --gold-color: #E4BE7D; /* Main gold color */
  --gold-color-hover: #D7B06E; /* Gold for hover states, adjust as needed */
}

/* 强制覆盖和重置一些可能被修改的样式 */
@layer utilities {
  .text-gold {
    color: #E4BE7D !important;
  }
  
  .bg-gold {
    background-color: #E4BE7D !important;
  }
  
  .hover\:bg-gold:hover {
    background-color: #D7B06E !important;
  }
  
  .border-gold {
    border-color: #E4BE7D !important;
  }
}

/*
  Your tailwind.config.ts has `daisyui: { darkTheme: "dark", base: true }`.
  This means DaisyUI should automatically apply the 'dark' theme variables.
  This @media block might be redundant for --background and --foreground if DaisyUI
  is already setting --b1 and --bc from the dark theme.
  If you keep it for explicit override, ensure it uses the correct oklch syntax.
*/
@media (prefers-color-scheme: dark) {
  :root {
    --background: theme('colors.base-100');
    --foreground: theme('colors.base-content');
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif; /* Optionally use your sora font */
}

@keyframes coinSpill {
  0% {
    transform: translateY(-6px) translateX(0);
    opacity: 1;
  }
  50% {
    transform: translateY(0) translateX(var(--spread));
    opacity: 0.8;
  }
  100% {
    transform: translateY(6px) translateX(var(--spread));
    opacity: 0;
  }
}

.coin {
  animation: coinSpill 1.8s ease-in-out infinite;
}

.coin-1 {
  --spread: -4px; /* 向左散开 */
  animation-delay: 0s;
}

.coin-2 {
  --spread: 0px; /* 垂直下落 */
  animation-delay: 0.2s;
}

.coin-3 {
  --spread: 4px; /* 向右散开 */
  animation-delay: 0.4s;
}

/* Custom button styles with field-like rounded corners */
.btn-staking {
  @apply rounded-[0.5rem] transition-all duration-300;
  background: theme('colors.accent');
  color: #000;
  position: relative;
  overflow: hidden;
}

.btn-staking:hover {
  background: theme('colors.primary');
  box-shadow: 0 4px 12px rgba(228, 190, 125, 0.3);
}

.btn-staking::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, theme('colors.accent'), theme('colors.primary'));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-staking:hover::before {
  opacity: 1;
}

.btn-staking > span {
  position: relative;
  z-index: 10;
}