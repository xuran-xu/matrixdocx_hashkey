@tailwind base;
@tailwind components;
@tailwind utilities;
/* DaisyUI is configured as a Tailwind plugin in tailwind.config.ts,
   so this @plugin line is not needed and should be removed. */

:root {
  --background: theme('colors.base-100');
  --foreground: theme('colors.base-content');
  --gold-color: #E4BE7D; /* Main gold color */
  --gold-color-hover: #D7B06E; /* Gold for hover states, adjust as needed */
  --font-family: 'Sora', Arial, sans-serif;
}

/* 强制覆盖和重置一些可能被修改的样式 */
@layer utilities {
  .text-gold {
    color: #E4BE7D !important;
  }
  
  .bg-gold {
    background-color: #E4BE7D !important;
  }
  
  .hover\:bg-gold:hover {
    background-color: #D7B06E !important;
  }
  
  .border-gold {
    border-color: #E4BE7D !important;
  }
  
  /* 金色光芒文字效果 */
  .gold-shine-text {
    color: theme('colors.primary');
    text-shadow: 0 0 5px rgba(228, 190, 125, 0.5),
                 0 0 10px rgba(228, 190, 125, 0.3);
  }
}

/*
  Your tailwind.config.ts has `daisyui: { darkTheme: "dark", base: true }`.
  This means DaisyUI should automatically apply the 'dark' theme variables.
  This @media block might be redundant for --background and --foreground if DaisyUI
  is already setting --b1 and --bc from the dark theme.
  If you keep it for explicit override, ensure it uses the correct oklch syntax.
*/
@media (prefers-color-scheme: dark) {
  :root {
    --background: theme('colors.base-100');
    --foreground: theme('colors.base-content');
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: var(--font-family);
}

@keyframes borderFlow {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: 300% 0;
  }
  100% {
    background-position: 600% 0;
  }
}

.card-border {
  position: relative;
  border: 1px solid theme('colors.primary');
  background-clip: padding-box;
  transition: all 0.3s ease;
}

.card-border::before {
  content: '';
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(
    90deg,
    theme('colors.primary'),
    theme('colors.primary')/30%,
    theme('colors.primary'),
    theme('colors.primary')/30%,
    theme('colors.primary')
  );
  background-size: 200% 100%;
  -webkit-mask: linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0;
  transition: opacity 0.3s;
}

.card-border:hover {
  border-color: transparent;
}

.card-border:hover::before {
  opacity: 1;
  animation: borderFlow 4s linear infinite;
}

/* Custom button styles with field-like rounded corners */
.btn-staking {
  @apply rounded-[0.5rem] transition-all duration-300;
  background: theme('colors.accent');
  color: #000;
  position: relative;
  overflow: hidden;
}

.btn-staking:hover {
  background: theme('colors.primary');
  box-shadow: 0 4px 12px rgba(228, 190, 125, 0.3);
}

.btn-staking::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, theme('colors.accent'), theme('colors.primary'));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-staking:hover::before {
  opacity: 1;
}

.btn-staking > span {
  position: relative;
  z-index: 10;
}

/* Token Address Box Styles */
.token-address-box {
  @apply bg-base-300 bg-opacity-50 backdrop-blur-sm rounded-xl border border-neutral p-4
         transition-all hover:border-primary hover:border-opacity-30 hover:bg-base-300 hover:bg-opacity-80 text-left
         mt-8 max-w-lg mx-auto;
}

.token-address-icon {
  @apply w-8 h-8 rounded-full bg-primary bg-opacity-20 flex items-center justify-center mr-3;
}

.token-address-copy-button {
  @apply p-1 rounded-md hover:bg-neutral transition-colors cursor-pointer;
}

.token-address-tooltip {
  @apply absolute bottom-full right-0 mb-1 hidden group-hover:inline
         bg-base-300 text-base-content text-xs rounded py-1 px-2
         whitespace-nowrap border border-neutral;
}

/* 添加新的卡片渐变样式 */
.staking-card-gradient {
  background: linear-gradient(135deg, 
    hsl(var(--b3)) 0%,
    hsl(var(--b2)) 40%,
    hsl(var(--a)) 100%
  );
  background-size: 200% 200%;
  animation: gradientShift 10s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50% }
  50% { background-position: 100% 50% }
  100% { background-position: 0% 50% }
}